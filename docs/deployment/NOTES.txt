=============================================================================
                         博客系统部署要点
=============================================================================

## 快速参考

### Docker 部署（推荐）

1. 配置环境变量
   cp .env.docker.example .env
   nano .env  # 修改密码和JWT密钥

2. 构建后端
   cd backend/blog && ./mvnw clean package -DskipTests && cd ../..

3. 启动服务
   docker-compose up -d

4. 查看日志
   docker-compose logs -f

### 端口分配

- 80/443：前端页面（通过系统 Nginx）
- 8080：后端 API
- 8081：前端容器（内部）
- 3306：MySQL（仅容器内部）

### 端口冲突解决

如果 80 端口被占用，使用系统 Nginx 作为反向代理：

1. 修改 docker-compose.yml：
   frontend 端口改为 "8081:80"

2. 配置系统 Nginx 代理到 8081

详见：../PORT_CONFLICT_SOLUTION.md

### 证书续期

使用 webroot 模式，不需要停止服务：
sudo certbot renew --webroot -w /var/www/certbot --dry-run

### 常用命令

# 查看状态
docker-compose ps

# 重启服务
docker-compose restart backend

# 更新代码
git pull
cd backend/blog && ./mvnw clean package -DskipTests && cd ../..
docker-compose up -d --build

# 查看日志
docker-compose logs -f backend

# 进入容器
docker exec -it blog-backend bash

# 备份数据库
docker exec blog-mysql mysqldump -u root -p密码 blog > backup.sql

=============================================================================
                              详细文档
=============================================================================

- Docker部署指南：./DOCKER.md
- 日常维护指南：./MAINTENANCE.md
- 端口冲突解决：../PORT_CONFLICT_SOLUTION.md

=============================================================================
