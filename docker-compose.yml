version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: blog-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: blog
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - blog-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 后端应用
  backend:
    build:
      context: ./backend/blog
      dockerfile: Dockerfile
    container_name: blog-backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DATABASE_URL: jdbc:mysql://mysql:3306/blog?useSSL=true&serverTimezone=Asia/Shanghai&characterEncoding=UTF-8
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS:-3600000}
      JWT_REMEMBER_ME_EXPIRATION_MS: ${JWT_REMEMBER_ME_EXPIRATION_MS:-2592000000}
      SERVER_PORT: 8080
      # 首次部署时设置为 update 以创建数据库表，之后改为 validate
      DDL_AUTO: ${DDL_AUTO:-update}
      # 评论最大嵌套层级（可选，默认为 3）
      COMMENT_MAX_NESTING_LEVEL: ${COMMENT_MAX_NESTING_LEVEL:-3}
    ports:
      - "8080:8080"
    networks:
      - blog-network

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
    networks:
      - blog-network

networks:
  blog-network:
    driver: bridge

volumes:
  mysql-data:
