=============================================================================
                    博客系统生产环境部署方案 - 完成
=============================================================================

您好！我已经完成了代码的生产环境适配工作。以下是详细说明：

**注意**：本功能为新开发特性，建议合并到 preview 分支进行测试验证。

-----------------------------------------------------------------------------
📦 新增的文件（共 16 个）
-----------------------------------------------------------------------------

后端配置：
  ✓ backend/blog/src/main/resources/application-prod.properties
  ✓ backend/blog/.env.example  
  ✓ backend/blog/start-prod.sh
  ✓ backend/blog/Dockerfile

前端配置：
  ✓ frontend/.env.production
  ✓ frontend/.env.example
  ✓ frontend/Dockerfile
  ✓ frontend/nginx.conf

Docker 配置：
  ✓ docker-compose.yml
  ✓ .env.docker.example

文档：
  ✓ DEPLOYMENT.md （详细部署指南）
  ✓ DEPLOYMENT_QUICK_START.md （快速开始）
  ✓ DEPLOYMENT_SUMMARY.md （改动总结）
  ✓ ARCHITECTURE.md （架构图）

修改的文件：
  ✓ backend/blog/src/main/resources/application.properties
  ✓ frontend/src/utils/request.js
  ✓ .gitignore
  ✓ README.md

-----------------------------------------------------------------------------
🎯 主要改进
-----------------------------------------------------------------------------

1. 安全性提升
   • 数据库密码不再硬编码，通过环境变量配置
   • JWT 密钥通过环境变量配置（必须生成新密钥）
   • 所有敏感信息都在 .env 文件中，不会提交到 Git

2. 生产环境优化
   • Hibernate 改用 validate 模式，不会自动修改数据库
   • 关闭 SQL 日志输出，提升性能
   • 日志级别调整为 INFO
   • 前端可配置后端 API 地址
   • 服务器绑定到 0.0.0.0，支持从不同网络环境（互联网）访问

3. 部署方式
   方式一：Docker 部署（推荐，最简单）
   方式二：传统部署（需要手动配置各个服务）

-----------------------------------------------------------------------------
🚀 快速部署步骤
-----------------------------------------------------------------------------

=== Docker 方式（推荐）===

1. 准备环境变量文件
   cp .env.docker.example .env
   nano .env
   
   需要填写：
   - MYSQL_ROOT_PASSWORD（MySQL root 密码）
   - DATABASE_USERNAME（数据库用户名，如 bloguser）
   - DATABASE_PASSWORD（数据库密码）
   - JWT_SECRET（使用命令生成：openssl rand -base64 64）

2. 构建后端
   cd backend/blog
   ./mvnw clean package -DskipTests
   cd ../..

3. 启动所有服务
   docker-compose up -d

4. 查看日志
   docker-compose logs -f

访问：
  前端：http://你的服务器IP
  后端：http://你的服务器IP:8080/api
  
**重要**：应用已配置为绑定到所有网络接口，可以从互联网访问。

5. 配置防火墙允许外部访问
   sudo ufw allow 80/tcp     # HTTP
   sudo ufw allow 443/tcp    # HTTPS（可选）
   sudo ufw allow 8080/tcp   # 后端 API（如需直接访问）
   sudo ufw enable

=== 传统方式 ===

详细步骤请查看 DEPLOYMENT_QUICK_START.md 文档

-----------------------------------------------------------------------------
⚠️ 重要提醒
-----------------------------------------------------------------------------

部署前必须做的事情：

1. 生成新的 JWT 密钥
   openssl rand -base64 64
   
2. 不要使用开发环境的数据库密码

3. 首次启动需要创建数据库表
   使用 update 模式启动一次，创建完表后再用 validate 模式

4. 配置防火墙
   开放 80 端口（HTTP）
   开放 443 端口（HTTPS，可选）

-----------------------------------------------------------------------------
📚 文档说明
-----------------------------------------------------------------------------

建议按照以下顺序阅读：

1. 部署说明.txt（本文件）- 快速了解
2. DEPLOYMENT_SUMMARY.md - 改动总结，最详细
3. DEPLOYMENT_QUICK_START.md - 快速部署指南
4. DEPLOYMENT.md - 完整部署文档（包含高级配置）
5. ARCHITECTURE.md - 了解系统架构

-----------------------------------------------------------------------------
🔍 文件位置
-----------------------------------------------------------------------------

所有新增和修改的文件都在项目根目录或子目录中：

配置文件：
  • 后端生产配置：backend/blog/src/main/resources/application-prod.properties
  • 环境变量示例：backend/blog/.env.example
  • Docker 配置：docker-compose.yml

脚本：
  • 启动脚本：backend/blog/start-prod.sh

文档：
  • 所有 .md 文件都在项目根目录

-----------------------------------------------------------------------------
💡 常见问题
-----------------------------------------------------------------------------

Q: 我没有 Docker，可以部署吗？
A: 可以！请使用传统部署方式，查看 DEPLOYMENT_QUICK_START.md

Q: JWT 密钥怎么生成？
A: 运行命令：openssl rand -base64 64

Q: 如何配置 HTTPS？
A: 如果有域名，使用 Let's Encrypt，详见 DEPLOYMENT.md

Q: 数据库表怎么创建？
A: 首次启动时，临时使用 update 模式自动创建
   java -jar blog.jar --spring.jpa.hibernate.ddl-auto=update

Q: 如何查看应用日志？
A: Docker: docker-compose logs -f backend
   传统: sudo journalctl -u blog -f

-----------------------------------------------------------------------------
✅ 验证清单
-----------------------------------------------------------------------------

部署完成后，请验证以下功能：

□ 可以访问前端页面
□ 可以注册新用户
□ 可以登录
□ 可以创建文章
□ 可以查看文章列表
□ 可以编辑自己的文章
□ 可以删除自己的文章

-----------------------------------------------------------------------------
🆘 需要帮助？
-----------------------------------------------------------------------------

如果部署过程中遇到问题，可以提供：

1. 服务器信息
   - 操作系统版本
   - Java 版本（java -version）
   - MySQL 版本（mysql --version）

2. 错误信息
   - 完整的错误日志
   - 错误截图

3. 配置信息
   - 使用的部署方式（Docker 或传统）
   - 环境变量配置（敏感信息可以遮挡）

=============================================================================
                              祝部署顺利！🎉
=============================================================================
